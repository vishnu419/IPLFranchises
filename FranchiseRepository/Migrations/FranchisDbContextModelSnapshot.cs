// <auto-generated />
using System;
using FranchiseRepository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FranchiseRepository.Migrations
{
    [DbContext(typeof(FranchisDbContext))]
    partial class FranchisDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FranchiseRepository.Dtos.CategoryDto", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("44444444-4444-4444-4444-444444444444"),
                            Description = "Team Jerseys",
                            Name = "Jersey"
                        },
                        new
                        {
                            CategoryId = new Guid("55555555-5555-5555-5555-555555555555"),
                            Description = "Team Caps",
                            Name = "Cap"
                        },
                        new
                        {
                            CategoryId = new Guid("66666666-6666-6666-6666-666666666666"),
                            Description = "Team Flags",
                            Name = "Flag"
                        });
                });

            modelBuilder.Entity("FranchiseRepository.Dtos.FranchiseDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Franchises");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Description = "MI Official",
                            Name = "Mumbai Indians"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            Description = "CSK Official",
                            Name = "Chennai Super Kings"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            Description = "RCB Official",
                            Name = "Royal Challengers Bengaluru"
                        });
                });

            modelBuilder.Entity("FranchiseRepository.Dtos.OrderDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("FranchiseRepository.Dtos.OrderItemDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("FranchiseRepository.Dtos.ProductDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FranchiseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("FranchiseId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aaaaaaa1-aaaa-aaaa-aaaa-aaaaaaaaaaa1"),
                            CategoryId = new Guid("44444444-4444-4444-4444-444444444444"),
                            Description = "Mumbai Indians Jersey 2025",
                            FranchiseId = new Guid("11111111-1111-1111-1111-111111111111"),
                            ImageUrl = "/assets/mi-jersey.jpg",
                            Name = "MI Jersey",
                            Price = 1299m
                        },
                        new
                        {
                            Id = new Guid("aaaaaaa2-aaaa-aaaa-aaaa-aaaaaaaaaaa2"),
                            CategoryId = new Guid("55555555-5555-5555-5555-555555555555"),
                            Description = "Mumbai Indians Cap",
                            FranchiseId = new Guid("11111111-1111-1111-1111-111111111111"),
                            ImageUrl = "/assets/mi-cap.jpg",
                            Name = "MI Cap",
                            Price = 499m
                        },
                        new
                        {
                            Id = new Guid("bbbbbbb1-bbbb-bbbb-bbbb-bbbbbbbbbbb1"),
                            CategoryId = new Guid("44444444-4444-4444-4444-444444444444"),
                            Description = "Chennai Super Kings Jersey 2025",
                            FranchiseId = new Guid("22222222-2222-2222-2222-222222222222"),
                            ImageUrl = "/assets/csk-jersey.jpg",
                            Name = "CSK Jersey",
                            Price = 1299m
                        },
                        new
                        {
                            Id = new Guid("ccccccc1-cccc-cccc-cccc-ccccccccccc1"),
                            CategoryId = new Guid("66666666-6666-6666-6666-666666666666"),
                            Description = "Royal Challengers Bengaluru Flag",
                            FranchiseId = new Guid("33333333-3333-3333-3333-333333333333"),
                            ImageUrl = "/assets/rcb-flag.jpg",
                            Name = "RCB Flag",
                            Price = 299m
                        });
                });

            modelBuilder.Entity("FranchiseRepository.Dtos.UserDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FranchiseRepository.Dtos.OrderDto", b =>
                {
                    b.HasOne("FranchiseRepository.Dtos.UserDto", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FranchiseRepository.Dtos.OrderItemDto", b =>
                {
                    b.HasOne("FranchiseRepository.Dtos.OrderDto", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FranchiseRepository.Dtos.ProductDto", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FranchiseRepository.Dtos.ProductDto", b =>
                {
                    b.HasOne("FranchiseRepository.Dtos.CategoryDto", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FranchiseRepository.Dtos.FranchiseDto", "Franchise")
                        .WithMany("Products")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("FranchiseRepository.Dtos.CategoryDto", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("FranchiseRepository.Dtos.FranchiseDto", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("FranchiseRepository.Dtos.OrderDto", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
