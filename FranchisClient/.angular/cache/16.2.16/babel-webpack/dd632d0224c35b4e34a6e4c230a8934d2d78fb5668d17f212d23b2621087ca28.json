{"ast":null,"code":"var _FranchiseService;\nimport { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FranchiseService {\n  constructor(http) {\n    this.http = http;\n    this.api = environment.apiBaseUrl + '/api/franchise';\n  }\n  getAll() {\n    return this.http.get(this.api);\n  }\n}\n_FranchiseService = FranchiseService;\n_FranchiseService.ɵfac = function FranchiseService_Factory(t) {\n  return new (t || _FranchiseService)(i0.ɵɵinject(i1.HttpClient));\n};\n_FranchiseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _FranchiseService,\n  factory: _FranchiseService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["environment","FranchiseService","constructor","http","api","apiBaseUrl","getAll","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\vishnu.reddy\\works\\iplfranchis\\IPLFranchises\\FranchisClient\\src\\app\\core\\services\\franchise.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nexport interface FranchiseResponse {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FranchiseService {\r\n  private api = environment.apiBaseUrl + '/api/franchise';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAll(): Observable<FranchiseResponse[]> {\r\n    return this.http.get<FranchiseResponse[]>(this.api);\r\n  }\r\n}\r\n"],"mappings":";AAGA,SAASA,WAAW,QAAQ,mCAAmC;;;AAQ/D,OAAM,MAAOC,gBAAgB;EAG3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,GAAG,GAAGJ,WAAW,CAACK,UAAU,GAAG,gBAAgB;EAEhB;EAEvCC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAsB,IAAI,CAACH,GAAG,CAAC;EACrD;;oBAPWH,gBAAgB;;mBAAhBA,iBAAgB,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAhBV,iBAAgB;EAAAW,OAAA,EAAhBX,iBAAgB,CAAAY,IAAA;EAAAC,UAAA,EADH;AAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}