{"ast":null,"code":"var _AuthInterceptor;\nimport * as i0 from \"@angular/core\";\nexport class AuthInterceptor {\n  intercept(req, next) {\n    const authData = localStorage.getItem('auth');\n    let token = null;\n    if (authData) {\n      try {\n        token = JSON.parse(authData).accessToken;\n      } catch {}\n    }\n    if (token) {\n      const cloned = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return next.handle(cloned);\n    }\n    return next.handle(req);\n  }\n}\n_AuthInterceptor = AuthInterceptor;\n_AuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n  return new (t || _AuthInterceptor)();\n};\n_AuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _AuthInterceptor,\n  factory: _AuthInterceptor.ɵfac\n});","map":{"version":3,"names":["AuthInterceptor","intercept","req","next","authData","localStorage","getItem","token","JSON","parse","accessToken","cloned","clone","setHeaders","Authorization","handle","factory","ɵfac"],"sources":["C:\\Users\\vishnu.reddy\\works\\iplfranchis\\IPLFranchises\\FranchisClient\\src\\app\\core\\services\\auth.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const authData = localStorage.getItem('auth');\r\n    let token: string | null = null;\r\n    if (authData) {\r\n      try {\r\n        token = JSON.parse(authData).accessToken;\r\n      } catch {}\r\n    }\r\n    if (token) {\r\n      const cloned = req.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      return next.handle(cloned);\r\n    }\r\n    return next.handle(req);\r\n  }\r\n}\r\n"],"mappings":";;AAKA,OAAM,MAAOA,eAAe;EAC1BC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC7C,IAAIC,KAAK,GAAkB,IAAI;IAC/B,IAAIH,QAAQ,EAAE;MACZ,IAAI;QACFG,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC,CAACM,WAAW;OACzC,CAAC,MAAM;;IAEV,IAAIH,KAAK,EAAE;MACT,MAAMI,MAAM,GAAGT,GAAG,CAACU,KAAK,CAAC;QACvBC,UAAU,EAAE;UACVC,aAAa,EAAE,UAAUP,KAAK;;OAEjC,CAAC;MACF,OAAOJ,IAAI,CAACY,MAAM,CAACJ,MAAM,CAAC;;IAE5B,OAAOR,IAAI,CAACY,MAAM,CAACb,GAAG,CAAC;EACzB;;mBAlBWF,eAAe;;mBAAfA,gBAAe;AAAA;;SAAfA,gBAAe;EAAAgB,OAAA,EAAfhB,gBAAe,CAAAiB;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}