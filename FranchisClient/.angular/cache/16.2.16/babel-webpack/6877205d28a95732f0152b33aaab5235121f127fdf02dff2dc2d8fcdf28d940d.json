{"ast":null,"code":"var _ProductService;\nimport { HttpParams } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.apiBaseUrl;\n  }\n  getProducts(pageNumber, pageSize) {\n    const params = new HttpParams().set('pageNumber', pageNumber).set('pageSize', pageSize);\n    return this.http.get(`${this.baseUrl}/api/Product/paged`, {\n      params\n    });\n  }\n  searchProducts(name) {\n    const params = new HttpParams().set('name', name);\n    return this.http.get(`${this.baseUrl}/api/Product/search`, {\n      params\n    });\n  }\n  getProductById(id) {\n    return this.http.get(`${this.baseUrl}/api/Product/${id}`);\n  }\n}\n_ProductService = ProductService;\n_ProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || _ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\n_ProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _ProductService,\n  factory: _ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpParams","environment","ProductService","constructor","http","baseUrl","apiBaseUrl","getProducts","pageNumber","pageSize","params","set","get","searchProducts","name","getProductById","id","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\vishnu.reddy\\works\\iplfranchis\\IPLFranchises\\FranchisClient\\src\\app\\core\\services\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\nimport { Product, ProductPagedResult } from '../models/product.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ProductService {\r\n  private baseUrl = environment.apiBaseUrl;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getProducts(pageNumber: number, pageSize: number): Observable<ProductPagedResult> {\r\n    const params = new HttpParams()\r\n      .set('pageNumber', pageNumber)\r\n      .set('pageSize', pageSize);\r\n    return this.http.get<ProductPagedResult>(`${this.baseUrl}/api/Product/paged`, { params });\r\n  }\r\n\r\n  searchProducts(name: string): Observable<Product[]> {\r\n    const params = new HttpParams().set('name', name);\r\n    return this.http.get<Product[]>(`${this.baseUrl}/api/Product/search`, { params });\r\n  }\r\n  getProductById(id: string): Observable<Product> {\r\n    return this.http.get<Product>(`${this.baseUrl}/api/Product/${id}`);\r\n  }\r\n}\r\n"],"mappings":";AACA,SAAqBA,UAAU,QAAQ,sBAAsB;AAE7D,SAASC,WAAW,QAAQ,mCAAmC;;;AAI/D,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAGJ,WAAW,CAACK,UAAU;EAED;EAEvCC,WAAWA,CAACC,UAAkB,EAAEC,QAAgB;IAC9C,MAAMC,MAAM,GAAG,IAAIV,UAAU,EAAE,CAC5BW,GAAG,CAAC,YAAY,EAAEH,UAAU,CAAC,CAC7BG,GAAG,CAAC,UAAU,EAAEF,QAAQ,CAAC;IAC5B,OAAO,IAAI,CAACL,IAAI,CAACQ,GAAG,CAAqB,GAAG,IAAI,CAACP,OAAO,oBAAoB,EAAE;MAAEK;IAAM,CAAE,CAAC;EAC3F;EAEAG,cAAcA,CAACC,IAAY;IACzB,MAAMJ,MAAM,GAAG,IAAIV,UAAU,EAAE,CAACW,GAAG,CAAC,MAAM,EAAEG,IAAI,CAAC;IACjD,OAAO,IAAI,CAACV,IAAI,CAACQ,GAAG,CAAY,GAAG,IAAI,CAACP,OAAO,qBAAqB,EAAE;MAAEK;IAAM,CAAE,CAAC;EACnF;EACAK,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACZ,IAAI,CAACQ,GAAG,CAAU,GAAG,IAAI,CAACP,OAAO,gBAAgBW,EAAE,EAAE,CAAC;EACpE;;kBAlBWd,cAAc;;mBAAdA,eAAc,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAdlB,eAAc;EAAAmB,OAAA,EAAdnB,eAAc,CAAAoB,IAAA;EAAAC,UAAA,EADD;AAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}