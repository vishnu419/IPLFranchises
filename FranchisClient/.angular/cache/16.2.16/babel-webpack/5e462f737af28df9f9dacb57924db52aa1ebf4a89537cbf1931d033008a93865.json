{"ast":null,"code":"var _AuthService;\nimport { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.api = environment.apiBaseUrl + '/api/user';\n  }\n  login(data) {\n    return this.http.post(`${this.api}/login`, data);\n  }\n  register(data) {\n    return this.http.post(`${this.api}/register`, data);\n  }\n  forgotPassword(email) {\n    return this.http.post(`${this.api}/forgot-password`, {\n      email\n    });\n  }\n}\n_AuthService = AuthService;\n_AuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || _AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\n_AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _AuthService,\n  factory: _AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["environment","AuthService","constructor","http","api","apiBaseUrl","login","data","post","register","forgotPassword","email","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\vishnu.reddy\\works\\iplfranchis\\IPLFranchises\\FranchisClient\\src\\app\\core\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nexport interface LoginRequest {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nexport interface RegisterRequest {\r\n  username: string;\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport interface UserResponse {\r\n  id: string;\r\n  username: string;\r\n  email: string;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n  private api = environment.apiBaseUrl + '/api/user';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  login(data: LoginRequest): Observable<UserResponse> {\r\n    return this.http.post<UserResponse>(`${this.api}/login`, data);\r\n  }\r\n\r\n  register(data: RegisterRequest): Observable<UserResponse> {\r\n    return this.http.post<UserResponse>(`${this.api}/register`, data);\r\n  }\r\n\r\n  forgotPassword(email: string): Observable<any> {\r\n    return this.http.post(`${this.api}/forgot-password`, { email });\r\n  }\r\n}\r\n"],"mappings":";AAGA,SAASA,WAAW,QAAQ,mCAAmC;;;AAoB/D,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,GAAG,GAAGJ,WAAW,CAACK,UAAU,GAAG,WAAW;EAEX;EAEvCC,KAAKA,CAACC,IAAkB;IACtB,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAe,GAAG,IAAI,CAACJ,GAAG,QAAQ,EAAEG,IAAI,CAAC;EAChE;EAEAE,QAAQA,CAACF,IAAqB;IAC5B,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAe,GAAG,IAAI,CAACJ,GAAG,WAAW,EAAEG,IAAI,CAAC;EACnE;EAEAG,cAAcA,CAACC,KAAa;IAC1B,OAAO,IAAI,CAACR,IAAI,CAACK,IAAI,CAAC,GAAG,IAAI,CAACJ,GAAG,kBAAkB,EAAE;MAAEO;IAAK,CAAE,CAAC;EACjE;;eAfWV,WAAW;;mBAAXA,YAAW,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAXd,YAAW;EAAAe,OAAA,EAAXf,YAAW,CAAAgB,IAAA;EAAAC,UAAA,EADE;AAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}