{"ast":null,"code":"var _OrderService;\nimport { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OrderService {\n  constructor(http) {\n    this.http = http;\n    this.api = environment.apiBaseUrl + '/api/order';\n  }\n  placeOrder(request) {\n    return this.http.post(this.api, request);\n  }\n  getOrders() {\n    return this.http.get(this.api);\n  }\n  getPagedOrders(pageNumber = 1, pageSize = 10) {\n    return this.http.get(`${this.api}/paged`, {\n      params: {\n        pageNumber,\n        pageSize\n      }\n    });\n  }\n}\n_OrderService = OrderService;\n_OrderService.ɵfac = function OrderService_Factory(t) {\n  return new (t || _OrderService)(i0.ɵɵinject(i1.HttpClient));\n};\n_OrderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _OrderService,\n  factory: _OrderService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["environment","OrderService","constructor","http","api","apiBaseUrl","placeOrder","request","post","getOrders","get","getPagedOrders","pageNumber","pageSize","params","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\vishnu.reddy\\works\\iplfranchis\\IPLFranchises\\FranchisClient\\src\\app\\core\\services\\order.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\nimport { OrderRequest, OrderResponse, PagedResult } from '../models/order.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class OrderService {\r\n  private api = environment.apiBaseUrl + '/api/order';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  placeOrder(request: OrderRequest): Observable<any> {\r\n    return this.http.post(this.api, request);\r\n  }\r\n\r\n  getOrders(): Observable<OrderResponse[]> {\r\n    return this.http.get<OrderResponse[]>(this.api);\r\n  }\r\n\r\n  getPagedOrders(pageNumber = 1, pageSize = 10): Observable<PagedResult<OrderResponse>> {\r\n    return this.http.get<PagedResult<OrderResponse>>(`${this.api}/paged`, {\r\n      params: { pageNumber, pageSize }\r\n    });\r\n  }\r\n}\r\n"],"mappings":";AAGA,SAASA,WAAW,QAAQ,mCAAmC;;;AAI/D,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,GAAG,GAAGJ,WAAW,CAACK,UAAU,GAAG,YAAY;EAEZ;EAEvCC,UAAUA,CAACC,OAAqB;IAC9B,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,IAAI,CAACJ,GAAG,EAAEG,OAAO,CAAC;EAC1C;EAEAE,SAASA,CAAA;IACP,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAkB,IAAI,CAACN,GAAG,CAAC;EACjD;EAEAO,cAAcA,CAACC,UAAU,GAAG,CAAC,EAAEC,QAAQ,GAAG,EAAE;IAC1C,OAAO,IAAI,CAACV,IAAI,CAACO,GAAG,CAA6B,GAAG,IAAI,CAACN,GAAG,QAAQ,EAAE;MACpEU,MAAM,EAAE;QAAEF,UAAU;QAAEC;MAAQ;KAC/B,CAAC;EACJ;;gBAjBWZ,YAAY;;mBAAZA,aAAY,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAZjB,aAAY;EAAAkB,OAAA,EAAZlB,aAAY,CAAAmB,IAAA;EAAAC,UAAA,EADC;AAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}