{"ast":null,"code":"var _CartService;\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nconst STORAGE_KEY = 'ipl_cart_v1';\nexport class CartService {\n  get currentState() {\n    return this.state;\n  }\n  constructor() {\n    this.state = {\n      items: []\n    };\n    this.subject = new BehaviorSubject(this.state);\n    this.state$ = this.subject.asObservable();\n    this.load();\n  }\n  emit() {\n    this.subject.next(this.state);\n    this.save();\n  }\n  save() {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(this.state));\n  }\n  load() {\n    const raw = localStorage.getItem(STORAGE_KEY);\n    if (raw) {\n      try {\n        this.state = JSON.parse(raw);\n      } catch {}\n    }\n    this.subject.next(this.state);\n  }\n  get count() {\n    return this.state.items.reduce((s, i) => s + i.quantity, 0);\n  }\n  get total() {\n    return this.state.items.reduce((s, i) => s + i.quantity * i.price, 0);\n  }\n  add(item, qty = 1) {\n    const existing = this.state.items.find(i => i.productId === item.productId);\n    if (existing) existing.quantity += qty;else this.state.items.push({\n      ...item,\n      quantity: qty\n    });\n    this.emit();\n  }\n  updateQuantity(productId, qty) {\n    const it = this.state.items.find(i => i.productId === productId);\n    if (!it) return;\n    it.quantity = Math.max(1, qty);\n    this.emit();\n  }\n  remove(productId) {\n    this.state.items = this.state.items.filter(i => i.productId !== productId);\n    this.emit();\n  }\n  clear() {\n    this.state.items = [];\n    this.emit();\n  }\n}\n_CartService = CartService;\n_CartService.ɵfac = function CartService_Factory(t) {\n  return new (t || _CartService)();\n};\n_CartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _CartService,\n  factory: _CartService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","STORAGE_KEY","CartService","currentState","state","constructor","items","subject","state$","asObservable","load","emit","next","save","localStorage","setItem","JSON","stringify","raw","getItem","parse","count","reduce","s","i","quantity","total","price","add","item","qty","existing","find","productId","push","updateQuantity","it","Math","max","remove","filter","clear","factory","ɵfac","providedIn"],"sources":["C:\\Users\\vishnu.reddy\\works\\iplfranchis\\IPLFranchises\\FranchisClient\\src\\app\\core\\services\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { CartItem, CartState } from '../models/cart.model';\r\n\r\nconst STORAGE_KEY = 'ipl_cart_v1';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CartService {\r\n  private state: CartState = { items: [] };\r\n  get currentState(): CartState {\r\n    return this.state;\r\n  }\r\n  private subject = new BehaviorSubject<CartState>(this.state);\r\n  state$ = this.subject.asObservable();\r\n\r\n  constructor() {\r\n    this.load();\r\n  }\r\n\r\n  private emit() {\r\n    this.subject.next(this.state);\r\n    this.save();\r\n  }\r\n\r\n  private save() {\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(this.state));\r\n  }\r\n\r\n  private load() {\r\n    const raw = localStorage.getItem(STORAGE_KEY);\r\n    if (raw) {\r\n      try { this.state = JSON.parse(raw); } catch {}\r\n    }\r\n    this.subject.next(this.state);\r\n  }\r\n\r\n  get count(): number { return this.state.items.reduce((s,i)=> s + i.quantity, 0); }\r\n  get total(): number { return this.state.items.reduce((s,i)=> s + i.quantity * i.price, 0); }\r\n\r\n  add(item: Omit<CartItem, 'quantity'>, qty = 1) {\r\n    const existing = this.state.items.find(i => i.productId === item.productId);\r\n    if (existing) existing.quantity += qty; else this.state.items.push({ ...item, quantity: qty });\r\n    this.emit();\r\n  }\r\n\r\n  updateQuantity(productId: number, qty: number) {\r\n    const it = this.state.items.find(i => i.productId === productId);\r\n    if (!it) return;\r\n    it.quantity = Math.max(1, qty);\r\n    this.emit();\r\n  }\r\n\r\n  remove(productId: number) {\r\n    this.state.items = this.state.items.filter(i => i.productId !== productId);\r\n    this.emit();\r\n  }\r\n\r\n  clear() {\r\n    this.state.items = [];\r\n    this.emit();\r\n  }\r\n}\r\n"],"mappings":";AACA,SAASA,eAAe,QAAQ,MAAM;;AAGtC,MAAMC,WAAW,GAAG,aAAa;AAGjC,OAAM,MAAOC,WAAW;EAEtB,IAAIC,YAAYA,CAAA;IACd,OAAO,IAAI,CAACC,KAAK;EACnB;EAIAC,YAAA;IAPQ,KAAAD,KAAK,GAAc;MAAEE,KAAK,EAAE;IAAE,CAAE;IAIhC,KAAAC,OAAO,GAAG,IAAIP,eAAe,CAAY,IAAI,CAACI,KAAK,CAAC;IAC5D,KAAAI,MAAM,GAAG,IAAI,CAACD,OAAO,CAACE,YAAY,EAAE;IAGlC,IAAI,CAACC,IAAI,EAAE;EACb;EAEQC,IAAIA,CAAA;IACV,IAAI,CAACJ,OAAO,CAACK,IAAI,CAAC,IAAI,CAACR,KAAK,CAAC;IAC7B,IAAI,CAACS,IAAI,EAAE;EACb;EAEQA,IAAIA,CAAA;IACVC,YAAY,CAACC,OAAO,CAACd,WAAW,EAAEe,IAAI,CAACC,SAAS,CAAC,IAAI,CAACb,KAAK,CAAC,CAAC;EAC/D;EAEQM,IAAIA,CAAA;IACV,MAAMQ,GAAG,GAAGJ,YAAY,CAACK,OAAO,CAAClB,WAAW,CAAC;IAC7C,IAAIiB,GAAG,EAAE;MACP,IAAI;QAAE,IAAI,CAACd,KAAK,GAAGY,IAAI,CAACI,KAAK,CAACF,GAAG,CAAC;OAAG,CAAC,MAAM;;IAE9C,IAAI,CAACX,OAAO,CAACK,IAAI,CAAC,IAAI,CAACR,KAAK,CAAC;EAC/B;EAEA,IAAIiB,KAAKA,CAAA;IAAa,OAAO,IAAI,CAACjB,KAAK,CAACE,KAAK,CAACgB,MAAM,CAAC,CAACC,CAAC,EAACC,CAAC,KAAID,CAAC,GAAGC,CAAC,CAACC,QAAQ,EAAE,CAAC,CAAC;EAAE;EACjF,IAAIC,KAAKA,CAAA;IAAa,OAAO,IAAI,CAACtB,KAAK,CAACE,KAAK,CAACgB,MAAM,CAAC,CAACC,CAAC,EAACC,CAAC,KAAID,CAAC,GAAGC,CAAC,CAACC,QAAQ,GAAGD,CAAC,CAACG,KAAK,EAAE,CAAC,CAAC;EAAE;EAE3FC,GAAGA,CAACC,IAAgC,EAAEC,GAAG,GAAG,CAAC;IAC3C,MAAMC,QAAQ,GAAG,IAAI,CAAC3B,KAAK,CAACE,KAAK,CAAC0B,IAAI,CAACR,CAAC,IAAIA,CAAC,CAACS,SAAS,KAAKJ,IAAI,CAACI,SAAS,CAAC;IAC3E,IAAIF,QAAQ,EAAEA,QAAQ,CAACN,QAAQ,IAAIK,GAAG,CAAC,KAAM,IAAI,CAAC1B,KAAK,CAACE,KAAK,CAAC4B,IAAI,CAAC;MAAE,GAAGL,IAAI;MAAEJ,QAAQ,EAAEK;IAAG,CAAE,CAAC;IAC9F,IAAI,CAACnB,IAAI,EAAE;EACb;EAEAwB,cAAcA,CAACF,SAAiB,EAAEH,GAAW;IAC3C,MAAMM,EAAE,GAAG,IAAI,CAAChC,KAAK,CAACE,KAAK,CAAC0B,IAAI,CAACR,CAAC,IAAIA,CAAC,CAACS,SAAS,KAAKA,SAAS,CAAC;IAChE,IAAI,CAACG,EAAE,EAAE;IACTA,EAAE,CAACX,QAAQ,GAAGY,IAAI,CAACC,GAAG,CAAC,CAAC,EAAER,GAAG,CAAC;IAC9B,IAAI,CAACnB,IAAI,EAAE;EACb;EAEA4B,MAAMA,CAACN,SAAiB;IACtB,IAAI,CAAC7B,KAAK,CAACE,KAAK,GAAG,IAAI,CAACF,KAAK,CAACE,KAAK,CAACkC,MAAM,CAAChB,CAAC,IAAIA,CAAC,CAACS,SAAS,KAAKA,SAAS,CAAC;IAC1E,IAAI,CAACtB,IAAI,EAAE;EACb;EAEA8B,KAAKA,CAAA;IACH,IAAI,CAACrC,KAAK,CAACE,KAAK,GAAG,EAAE;IACrB,IAAI,CAACK,IAAI,EAAE;EACb;;eArDWT,WAAW;;mBAAXA,YAAW;AAAA;;SAAXA,YAAW;EAAAwC,OAAA,EAAXxC,YAAW,CAAAyC,IAAA;EAAAC,UAAA,EADE;AAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}